{"version":3,"file":"main.js","mappings":"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","sources":["webpack://lightspeeds/./src/scripts/level.js","webpack://lightspeeds/./src/index.js","webpack://lightspeeds/./src/scripts/game.js","webpack://lightspeeds/./src/scripts/styling.js","webpack://lightspeeds/./src/scripts/links.js","webpack://lightspeeds/./src/scripts/player.js"],"sourcesContent":["const CONSTANTS = {\n    E_BOXES_SPEED: 4,\n    WARM_UP_SECONDS: 3, \n    BOX_SPACING: Math.floor(Math.random() * 100) + 300,\n    BOX_SIZE: 50\n}\n\nfunction boxSpacing(space) {\n    return Math.floor(Math.random() * 600) + space;\n}\n\nclass Level {\n    constructor (dimensions, canvas, options) {\n        this.dimensions = dimensions;\n        this.canvas = canvas;\n        this.ctx = this.canvas.getContext(\"2d\");\n\n        this.boxSpeed = options.boxSpeed;\n        this.boxSpacing = options.boxSpacing;\n        this.boxSize = options.boxSize;\n\n        // this.loopLimit = 3;\n        // this.loopCount = 0;\n        const firstBoxDistance = this.dimensions.width + 100\n        \n        // this.swatches = {\n        //     KeyA: {\n        //         r: Math.floor(Math.random() * 256), \n        //         g: Math.floor(Math.random() * 256), \n        //         b: Math.floor(Math.random() * 256)\n        //     },\n        //     KeyS: {\n        //         r: Math.floor(Math.random() * 256), \n        //         g: Math.floor(Math.random() * 256), \n        //         b: Math.floor(Math.random() * 256)\n        //     },\n        //     KeyD: {\n        //         r: Math.floor(Math.random() * 256), \n        //         g: Math.floor(Math.random() * 256), \n        //         b: Math.floor(Math.random() * 256)\n        //     }\n        // };\n       \n       \n       \n        this.swatches = {\n            KeyA: {\n                r: 255,\n                g: 0,\n                b: 0\n            },\n            KeyS: {\n                r: 0,\n                g: 255,\n                b: 0\n            },\n            KeyD: {\n                r: 0,\n                g: 0,\n                b: 255\n            }\n        };\n\n        this.mixColors = this.generateRandomColorMix();\n\n        this.boxes = [\n            this.randomBox(firstBoxDistance),\n            this.randomBox(firstBoxDistance + (boxSpacing(this.boxSpacing))),\n            this.randomBox(firstBoxDistance + (2 * boxSpacing(this.boxSpacing)))\n        ];\n\n\n        this.drawEboxes();\n\n        setInterval(() => {\n            this.boxSpeed += 0.2;\n            // this.boxSize += 10;\n        }, 15000);\n    //   this.animate();\n    }\n\n    eachBox(callback) {\n        this.boxes.forEach(callback.bind(this))\n    }\n\n    generateRandomColorMix() {\n        const colors = [\n            this.swatches.KeyA,\n            this.swatches.KeyS,\n            this.swatches.KeyD,\n            {\n                r: this.swatches.KeyA.r + this.swatches.KeyS.r,\n                g: this.swatches.KeyA.g + this.swatches.KeyS.g,\n                b: this.swatches.KeyA.b + this.swatches.KeyS.b\n            },\n            {\n                r: this.swatches.KeyA.r + this.swatches.KeyD.r,\n                g: this.swatches.KeyA.g + this.swatches.KeyD.g,\n                b: this.swatches.KeyA.b + this.swatches.KeyD.b\n            },\n            {\n                r: this.swatches.KeyD.r + this.swatches.KeyS.r,\n                g: this.swatches.KeyD.g + this.swatches.KeyS.g,\n                b: this.swatches.KeyD.b + this.swatches.KeyS.b\n            },\n            {\n                r: this.swatches.KeyA.r + this.swatches.KeyD.r + this.swatches.KeyS.r,\n                g: this.swatches.KeyA.g + this.swatches.KeyD.g + this.swatches.KeyS.g,\n                b: this.swatches.KeyA.b + this.swatches.KeyD.b + this.swatches.KeyS.b\n            }\n        ];\n\n        return colors.map(color => `rgb(${color.r}, ${color.g}, ${color.b})`);\n    }\n\n    changeLevel() {\n        this.swatches = {\n            KeyA: {\n                r: Math.floor(Math.random() * 256), \n                g: Math.floor(Math.random() * 256), \n                b: Math.floor(Math.random() * 256)\n            },\n            KeyS: {\n                r: Math.floor(Math.random() * 256), \n                g: Math.floor(Math.random() * 256), \n                b: Math.floor(Math.random() * 256)\n            },\n            KeyD: {\n                r: Math.floor(Math.random() * 256), \n                g: Math.floor(Math.random() * 256), \n                b: Math.floor(Math.random() * 256)\n            }\n        };\n    }\n\n    \n    randomBox(fbd) {\n    \n        \n        let temp = 'rgb(0, 0, 0'\n         \n        if (this.mixColors[Math.floor(Math.random() * this.mixColors.length)] !== 'rgb(255, 255, 255') { \n            temp = this.mixColors[Math.floor(Math.random() * this.mixColors.length)]\n        }\n\n        const box = {\n            left: fbd,\n            right: this.boxSize + fbd + this.boxSpacing,\n            color: temp\n\n        }\n        \n        return box\n    }\n\n\n    moveBoxes() {\n        this.eachBox((box) => {\n            box.left -= this.boxSpeed;\n            box.right -= this.boxSpeed;\n            if (box.left + 50 <= 0) {\n                this.boxes.shift();\n                // if (this.loopCount < this.loopLimit) {\n                    const reX = this.boxes.at(-1).left + 50 + boxSpacing(this.boxSpacing);\n                    this.boxes.push(this.randomBox(reX));\n                    // this.loopCount++;\n                // }\n            }\n        });\n        // this.drawEboxes();\n    }\n    \n    drawEboxes() {\n        this.eachBox((box) => {\n           \n            this.ctx.fillStyle = box.color;\n            this.ctx.fillRect(box.left, 0, this.boxSize, 500)\n\n        });\n    }\n\n    collide(playerSize, playerColor) {\n\n      \n        let collision = false;\n        \n        if (playerSize >= this.boxes[0].left && playerColor !== this.boxes[0].color) {\n         \n            collision = true;\n        }\n\n        return collision;\n    }\n\n\n    animate() {\n        this.moveBoxes();\n        \n        this.drawEboxes();\n        \n     \n    }\n      \n\n\n}\n\nexport default Level;\n","\nimport Player from \"./scripts/player\"\nimport Level from \"./scripts/level\"\nimport TitleStyling from './scripts/styling'\nimport Game from \"./scripts/game\"\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    const canvas = document.getElementById(\"my-canvas\");\n    const ctx = canvas.getContext(\"2d\")\n    const dimensions = {width: canvas.width, height: canvas.height };\n  \n    \n    new Game(canvas)\n    \n\n\n\n}) \n\n\n    //////////////////////////\n    // const level = new Level(dimensions, canvas, {\n    //     boxSize: 50,\n    //     boxSpeed: 4,\n    //     boxSpacing: 200\n    // });\n\n    // const player = new Player(canvas);\n\n    // const canvasHeight = 1000;\n    // const rectSize = canvasHeight / 4;\n  \n\n    // function animate() {\n    //     // Drawing background //\n    //     // ctx.translate(0.5, 0.5);\n    //     ctx.clearRect(0, 0, 1000, 1000);\n\n  \n    //     for (let i = 0; i < 6; i++) {\n    //         for (let j = 0; j < 6; j++) {\n    //             const colorValue = 255 - (255 / 5) * j;\n    //             const grayscale = `rgb(${colorValue}, ${colorValue}, ${colorValue})`;\n    //             ctx.fillStyle = grayscale;\n    //             ctx.fillRect(j * rectSize, i * rectSize, rectSize, rectSize);\n    //         }\n    //     }\n        \n    //     ctx.lineWidth = 11;\n    //     ctx.strokeStyle = \"#348888\";\n    //     ctx.beginPath();\n    //     ctx.moveTo(0, 500)\n    //     ctx.lineTo(1000, 500);\n        \n    //     ctx.stroke();\n    //     // Background //\n\n    //     level.animate();\n    //     player.drawBox();\n    //     requestAnimationFrame(animate);\n    // }\n\n    // animate();\n  \n    \n","import Player from \"./player\"\nimport Level from \"./level\"\nimport TitleStyling from \"./styling\"\nimport Links from \"./links\"\n\nclass Game {\n    constructor(canvas) {\n        this.canvas = canvas;\n        this.bottomCanvas = document.getElementById('bottom-canvas')\n        this.ctx = canvas.getContext('2d');\n        this.ctx2 = this.bottomCanvas.getContext('2d')\n        this.dimensions = {width: canvas.width, height: canvas.height};\n        this.started = false;\n        this.registerStart();\n        this.openingText();\n\n\n        this.timer = {\n            hours: 0,\n            minutes: 0,\n            seconds: 0,\n            gameSeconds: 0,\n            count: 0\n        }\n    }\n\n    openingText () {\n        this.ctx.lineWidth = 2;\n        this.ctx.font = '60px Tahoma'\n        this.ctx.strokeStyle = \"#FF0000\"\n        this.ctx.strokeText(\"Click To Start\", 330, 250);\n        this.ctx.font = '40px Tahoma'\n        this.ctx.strokeStyle = \"#FF0000\"\n        this.ctx.strokeText(\"Use A S D Keys To Play\", 300, 310);\n        this.ctx.font = '23px Tahoma'\n        this.ctx.strokeStyle = \"black\"\n        this.ctx.strokeText(\"Tap Corresponding Key To Add Color\", 315, 410);\n        this.ctx.font = '23px Tahoma'\n        this.ctx.strokeStyle = \"black\"\n        this.ctx.strokeText(\"Objective is To Mix Colors To Match The Incoming Color Before It Reaches You\", 90, 440);\n        \n        new TitleStyling()\n        new Links()\n\n    }\n\n    closingText() {\n        \n        this.ctx.lineWidth = 2;\n        this.ctx.font = '40px Tahoma'\n        this.ctx.strokeStyle = \"#FF0000\"\n        this.ctx.strokeText(`Game Over, Your Time = ${this.savedTime.min} Minutes, ${this.savedTime.sec} Seconds`, 75, 245);\n\n        this.ctx.lineWidth = 2;\n        this.ctx.font = '40px Tahoma'\n        this.ctx.strokeStyle = \"black\"\n        this.ctx.strokeText('Click To Restart', 345, 305);\n\n    }\n\n    instructionText() {\n        this.ctx2.lineWidth = 2;\n        this.ctx2.font = '30px Tahoma'\n        this.ctx2.strokeStyle = `red`\n        this.ctx2.strokeText(\"Tap To Add or Remove Color\", 200, 25);\n        this.ctx2.strokeStyle = `rgb(${this.player.colors.r}, 0, 0)`\n        this.ctx2.strokeText(\"Press [A]\", 200, 60);\n        this.ctx2.strokeStyle = `rgb(0, ${this.player.colors.g}, 0)`\n        this.ctx2.strokeText(\"Press [S]\", 340, 60);\n        this.ctx2.strokeStyle = `rgb(0, 0, ${this.player.colors.b})`\n        this.ctx2.strokeText(\"Press [D]\", 478, 60);\n    }\n\n    registerStart () {\n\n        document.addEventListener('mousedown', (e) => {\n            console.log(e)\n            if (!this.started && e) {\n                this.started = true;\n                    this.start();\n                }\n            });\n    }\n\n\n    countTimer() {\n\n        \n        this.timer.count++;\n\n        if (this.timer.count === 60) {\n            this.timer.seconds++;\n            this.timer.gameSeconds++;\n            this.timer.count = 0; \n        }\n\n        if (this.timer.seconds === 60) {\n            this.timer.minutes++;\n            this.timer.seconds = 0;\n        }\n\n        if (this.timer.minutes === 60 ) {\n            this.timer.hours++;\n            this.timer.minutes = 0;\n    \n        }\n                \n            \n    }\n        \n    drawTimer() {\n        this.ctx2.lineWidth = 4;\n        this.ctx2.font = '50px Tahoma'\n        this.ctx2.strokeStyle = \"#FF0000\"\n        this.ctx2.strokeText(`${this.timer.gameSeconds}`, 32, 50);\n        \n        \n    }\n\n    resetTimer () {\n\n        this.timer.count = 0;\n        this.timer.hours = 0;\n        this.timer.minutes = 0;\n        this.timer.seconds = 0;\n        this.timer.gameSeconds = 0;\n    }\n\n    start() {\n\n        this.level = new Level(this.dimensions, this.canvas, {\n            boxSize: 50,\n            boxSpeed: 0.1,\n            boxSpacing: 400\n        });\n\n\n        this.player = new Player(this.canvas, this.level);\n\n        this.animate();\n\n    }\n\n\n    gameOver() {\n        return (\n            this.level.collide(this.player.playerSize, this.player.currentPlayerColor())\n        );\n    }\n\n    animate() {\n        // Drawing background //\n        // ctx.translate(0.5, 0.5);\n        this.ctx.clearRect(0, 0, 1000, 1000);\n        this.ctx2.clearRect(0,0,1000,1000)\n        const canvasHeight = 1000;\n        const rectSize = canvasHeight / 4;\n\n        for (let i = 0; i < 6; i++) {\n            for (let j = 0; j < 6; j++) {\n                const colorValue = 255 - (255 / 5) * j;\n                const grayscale = `rgb(${colorValue - 25}, ${colorValue - 25}, ${colorValue - 25})`;\n                this.ctx.fillStyle = grayscale;\n                this.ctx.fillRect(j * rectSize, i * rectSize, rectSize, rectSize);\n            }\n        }\n\n\n        this.level.animate();\n        this.player.drawBox();\n        this.countTimer();\n        this.drawTimer();\n        this.instructionText();\n\n\n        if (this.gameOver()) {\n        \n            this.savedTime = {\n                min: this.timer.minutes,\n                sec: this.timer.seconds\n            }\n            this.ctx.clearRect(0,0,1000,1000);\n            this.ctx2.clearRect(0,0,1000,1000)\n\n            this.closingText();\n            this.resetTimer();\n            this.started = false;\n            console.log('collision has occured')\n        } \n        if (this.started) {\n            const fps = 30;\n\n            setTimeout(() => {\n            requestAnimationFrame(this.animate.bind(this));\n            }, 1000/fps)\n        }\n    } \n\n\n}\n\nexport default Game;","\nclass titleStyling {\n    constructor() {\n        \n\nthis.title = document.getElementById('title')\n\nthis.el1 = document.createElement('span');\nthis.el1l = document.createTextNode('L');\nthis.el1.appendChild(this.el1l);\nthis.el1.setAttribute('style','--i:1')\n\nthis.el2 = document.createElement('span');\nthis.el2i = document.createTextNode('I');\nthis.el2.appendChild(this.el2i);\nthis.el2.setAttribute('style','--i:2')\n\nthis.el3 = document.createElement('span');\nthis.el3g = document.createTextNode('G');\nthis.el3.appendChild(this.el3g);\nthis.el3.setAttribute('style','--i:3')\n\nthis.el4 = document.createElement('span');\nthis.el4h = document.createTextNode('H');\nthis.el4.appendChild(this.el4h);\nthis.el4.setAttribute('style','--i:4')\n\nthis.el5 = document.createElement('span');\nthis.el5t = document.createTextNode('T');\nthis.el5.appendChild(this.el5t);\nthis.el5.setAttribute('style','--i:5')\n\nthis.el6 = document.createElement('span');\nthis.el6s = document.createTextNode('S');\nthis.el6.appendChild(this.el6s)\nthis.el6.setAttribute('style','--i:6')\n\nthis.el7 = document.createElement('span');\nthis.el7p = document.createTextNode('P');\nthis.el7.appendChild(this.el7p)\nthis.el7.setAttribute('style','--i:7')\n\nthis.el8 = document.createElement('span');\nthis.el8e = document.createTextNode('E');\nthis.el8.appendChild(this.el8e)\nthis.el8.setAttribute('style','--i:8')\n\nthis.el9 = document.createElement('span');\nthis.el9e = document.createTextNode('E');\nthis.el9.appendChild(this.el9e)\nthis.el9.setAttribute('style','--i:9')\n\n\nthis.el10 = document.createElement('span');\nthis.el10d = document.createTextNode('D');\nthis.el10.appendChild(this.el10d)\nthis.el10.setAttribute('style','--i:10')\n\nthis.title.appendChild(this.el1)\nthis.title.appendChild(this.el2)\nthis.title.appendChild(this.el3)\nthis.title.appendChild(this.el4)\nthis.title.appendChild(this.el5)\nthis.title.appendChild(this.el6)\nthis.title.appendChild(this.el7)\nthis.title.appendChild(this.el8)\nthis.title.appendChild(this.el9)\nthis.title.appendChild(this.el10)\n\n\n    }\n}\n\nexport default titleStyling;","class Links {\n    constructor () {\n\n\n        this.bottom = document.getElementById('bottom')\n        this.myStuff = document.getElementById('my-stuff')\n        \n        \n        this.makeButton('https://github.com/Juanderin/LightSpeeds', 'git-button.png')\n        \n        this.makeButton('https://www.linkedin.com/in/juanavilame/', 'link-button.png')\n        \n        \n        \n    }\n    \n    makeButton(link, img) {\n        \n        this.button = document.createElement('button')\n        this.button.setAttribute('id', 'links')\n        this.a = document.createElement('a')\n        this.a.setAttribute('href', link)\n        this.img = document.createElement('img')\n        this.button.appendChild(this.img)\n        this.img.setAttribute('src', img)\n        this.myStuff.appendChild(this.button)\n        this.myStuff.appendChild(this.a)\n        this.a.appendChild(this.button)\n\n    }\n\n\n\n\n}\n\nexport default Links;","const PLAYER_CONSTANTS = {\n\n    PLAYER_SIZE: 50\n};\n\nclass Player {\n    constructor(canvas, level) {\n        this.canvas = canvas;\n        // this.color = 'rgb(0,0,0)';\n        this.ctx = this.canvas.getContext(\"2d\");\n        // this.drawBox()\n        this.playerSize = PLAYER_CONSTANTS.PLAYER_SIZE\n        this.swatches = level.swatches;\n      \n        // this.keyStates = {\n        //     KeyA: {\n        //         lastPressTime: 0,\n        //         doubleTapDelay: 250\n        //     },\n\n        //     KeyS: {\n        //         lastPressTime: 0,\n        //         doubleTapDelay: 250 \n        //     },\n\n        //     KeyD: {\n        //         lastPressTime: 0,\n        //         doubleTapDelay: 250 \n        //     } \n        // }\n\n\n        this.keyStates = {\n            KeyA: false,\n            KeyS: false,\n            KeyD: false\n        };\n\n        this.keyBind();\n\n\n\n        this.colors = {\n            r: 0,\n            g: 0,\n            b: 0\n        }\n\n    }\n\n    currentPlayerColor() {\n        return `rgb(${this.colors.r}, ${this.colors.g}, ${this.colors.b})`;\n    }\n\n    currentPlayerColorHash() {\n        this.col = {\n            r: this.colors.r,\n            g: this.colors.g,\n            b: this.colors.b\n        };\n    }\n\n    // difficultySwitch() {\n\n    //     this.\n\n    // }\n\n    keyBind() {\n        document.addEventListener(\"keydown\", (e) => {\n            console.log(e)\n            console.log(e.code)\n            if ([\"KeyA\", \"KeyS\", \"KeyD\"].includes(e.code)) {\n                const valSign = this.keyStates[e.code] ? -1 : 1;\n                this.keyStates[e.code] = !this.keyStates[e.code];\n\n                this.changeColor(e.code, valSign);\n            }\n\n        });\n    }\n\n\n    // handleDoubleTap(key) {\n    //     switch(key) {\n    //         case 'KeyA':\n    //             if (this.colors.r === 255 ) {\n    //             this.colors.r -= 255\n    //             console.log('A double worked')\n    //             console.log(`rgb(${this.colors.r}, ${this.colors.g}, ${this.colors.b})`)\n    //             }\n    //             break;\n    //         case 'KeyS':\n    //             if (this.colors.g === 255 ) {\n    //             this.colors.g -= 255\n    //             console.log('S double worked')\n    //             console.log(`rgb(${this.colors.r}, ${this.colors.g}, ${this.colors.b})`)\n    //             }\n    //             break;\n    //         case 'KeyD':\n    //             if (this.colors.b === 255 ) {\n    //             this.colors.b -= 255\n    //             console.log('D double worked')\n    //             console.log(`rgb(${this.colors.r}, ${this.colors.g}, ${this.colors.b})`)\n    //             }\n    //             break;\n    //     }\n    // } \n\n    changeColor(keyPressed, valSign) {\n        this.colors.r += (valSign * (this.swatches[keyPressed].r));\n        this.colors.g += (valSign * (this.swatches[keyPressed].g));\n        this.colors.b += (valSign * (this.swatches[keyPressed].b));\n    }\n\n\n    drawBox() {\n\n        // this.ctx.lineWidth = 7\n        // this.ctx.strokeStyle = 'gray';\n        // this.ctx.strokeRect(3, 0, 50, 500);\n       \n        this.ctx.fillStyle = `rgb(${this.colors.r}, ${this.colors.g}, ${this.colors.b})`;\n        this.ctx.fillRect(0, 0, this.playerSize, 500)\n     \n    }\n\n    bringToFront() {\n        this.canvas.appendChild(this.canvas);\n    }\n}\n// some code\nexport default Player;\n"],"names":["boxSpacing","space","Math","floor","random","document","addEventListener","canvas","getElementById","getContext","width","height","constructor","this","bottomCanvas","ctx","ctx2","dimensions","started","registerStart","openingText","timer","hours","minutes","seconds","gameSeconds","count","lineWidth","font","strokeStyle","strokeText","title","el1","createElement","el1l","createTextNode","appendChild","setAttribute","el2","el2i","el3","el3g","el4","el4h","el5","el5t","el6","el6s","el7","el7p","el8","el8e","el9","el9e","el10","el10d","bottom","myStuff","makeButton","link","img","button","a","closingText","savedTime","min","sec","instructionText","player","colors","r","g","b","e","console","log","start","countTimer","drawTimer","resetTimer","level","options","boxSpeed","boxSize","firstBoxDistance","swatches","KeyA","KeyS","KeyD","mixColors","generateRandomColorMix","boxes","randomBox","drawEboxes","setInterval","eachBox","callback","forEach","bind","map","color","changeLevel","fbd","temp","length","left","right","moveBoxes","box","shift","reX","at","push","fillStyle","fillRect","collide","playerSize","playerColor","collision","animate","keyStates","keyBind","currentPlayerColor","currentPlayerColorHash","col","code","includes","valSign","changeColor","keyPressed","drawBox","bringToFront","gameOver","clearRect","rectSize","canvasHeight","i","j","colorValue","grayscale","setTimeout","requestAnimationFrame"],"sourceRoot":""}